location <- paste(directory, fileId, sep="")
newData <- read.csv(location)
completes <- newData[complete.cases(newData),]
if(nrow(completes) > threshold) {
##as.numeric(format(round(unname(colMeans(data, na.rm = T)), 3), nsmall = 3))
data <- c(data, round(cor(completes[["sulfate"]], completes[["nitrate"]]), 5))
}
}
data
corr <- function(directory, threshold = 0) {
##directory <- "specdata"
##threshold <- 150
directory <- paste(getwd(), "/" , directory, sep="")
files <- list.files(path=directory)
data <- vector('numeric')
for(i in seq_along(files)) {
fileId <- if(i < 10) {
paste("/00", i, ".csv", sep="")
} else if(i >= 10 & i < 100) {
paste("/0", i, ".csv", sep="")
} else {
paste("/", i, ".csv", sep="")
}
location <- paste(directory, fileId, sep="")
newData <- read.csv(location)
completes <- newData[complete.cases(newData),]
if(nrow(completes) > threshold) {
##as.numeric(format(round(unname(colMeans(data, na.rm = T)), 3), nsmall = 3))
data <- c(data, round(cor(completes[["sulfate"]], completes[["nitrate"]]), 5))
}
}
data
}
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
2
submit()
submit()
submit()
submit()
submit()
submit()
submit()
source(corr.R)
source(complete.R)
submit()
submit()
submit()
corr <- function(directory, threshold = 0) {
##directory <- "specdata"
##threshold <- 150
directory <- paste(getwd(), "/" , directory, sep="")
files <- list.files(path=directory)
data <- vector('numeric')
for(i in seq_along(files)) {
fileId <- if(i < 10) {
paste("/00", i, ".csv", sep="")
} else if(i >= 10 & i < 100) {
paste("/0", i, ".csv", sep="")
} else {
paste("/", i, ".csv", sep="")
}
location <- paste(directory, fileId, sep="")
newData <- read.csv(location)
completes <- newData[complete.cases(newData),]
if(nrow(completes) > threshold) {
##as.numeric(format(round(unname(colMeans(data, na.rm = T)), 3), nsmall = 3))
data <- c(data, round(cor(completes[["sulfate"]], completes[["nitrate"]]), 5))
}
}
data
}
cr <- corr("specdata", 150)
head(cr)
submit()
log(-1)
library(datasets)
data(iris)
?iris
head(iris)
tapply(iris, iris$Species, mean)
iris$Species
lapply(split(iris, iris$Species), mean)
lapply(split(iris, iris$Species), function(x) colMeans(x[, c("Sepal.Length")]))
lapply(split(iris, iris$Species), function(x) colMeans(x[, c("Sepal.Length", "Sepal.Width")]))
apply(iris[, 1:4], 2, mean)
apply(iris, 2, mean)
colMeans(iris)
rowMeans(iris[, 1:4])
class(rowMeans(iris[, 1:4])
)
class(apply(iris[, 1:4], 2, mean))
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
sapply(mtcars, cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
mtcars
with(mtcars, tapply(hp, cyl, mean))
abs(82.63636 - 209.21429)
debug(ls)
ls
ls
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone data=airquality, facets = . ~ Month)
qplot(Wind, Ozone, data=airquality, facets = . ~ Month)
install.packages("ggplot2")
lib(ggplot2)
library(ggplot2)
install.packages("ggplot2")
qplot(Wind, Ozone, data=airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
var(c(1,-1,1,-1,-1,-1))
var(c(1,-1,1,-1,-1,1))
var(c(-2/3,2/3))
var(0)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
mean(temp)
plot temp
plot(temp)
plot(temp$Prob)
plot(temp)
mean(x)
mean(p)
sum(1*.1,2*.2,3*.3,4*.4)
(.75*.3)/((.75*.3)+(.48*.7))
round(pnorm(70, mean=80, sd = 10) * 100)
qnorm(.95, mean=1100, sd=75)
75/sqrt(100)
qnorm(.95, mean=1100, sd=7.5)
pbinom(3, size=5, prob=.5. lower.tail=FALSE)
pbinom(3, size=5, prob=.5, lower.tail=FALSE)
mu <- 15
sd <- 10
10/sqrt(100)
mu <- .5
var <- 1/12
var
var*var
(var*var)/sqrt(1000)
sd <- (var*var)/sqrt(1000)
(var*var)/sqrt(100)
mu <- 5
ppois(10, lambda = mu * 3)
factorial(9)
9*8*7*6*5*4*3*2*1
factorial(9)/factorial(8)
factorial(9)/factorial(6)
9*8*7
factorial(9)/(factorial(6)*factorial(3))
1/12
var
var*var
sqrt(var)
sd <- sqrt(var)
sd/sqrt(100)
setwd("C:\\Users\\rripperda\\Documents\\GitHub\\RepData_PeerAssessment1")
data <- read.csv("activity\\activity.csv")
head(data)
mean(data)
head(data[complete.cases(data),])
str(data)
str(data[complete.cases(data),])
data = data[complete.cases(data),]
str(data)
mean(data)
mean(data$steps)
head(data)
aggregate(data$steps, df$date, mean)
aggregate(data$steps, list(df$date), mean)
list(df$date)
aggregate(data$steps, data$date, mean)
aggregate(data$steps, list(data$date), mean)
aggregate(data$steps, list(data$date), sum)
his(aggregate(data$steps, list(data$date), sum))
hist(aggregate(data$steps, list(data$date), sum))
data <- read.csv("activity\\activity.csv")
dfNoNA = data[complete.cases(data),]
aggregate(dfNoNA$steps, list(dfNoNA$date), sum)
dailyTotals = aggregate(dfNoNA$steps, list(dfNoNA$date), sum)
hist(dailyTotals)
hist(dailyTotals$x)
hist(dailyTotals$Group.1)
str(data)
head(dailyTotals)
str(dailyTotals)
dailyTotals$Group.1
class(dailyTotals$Group.1)
as.Date(dailyTotals$Group.1, format = "%m/%d/%Y")
as.Date(dailyTotals$Group.1[1], format = "%m/%d/%Y")
dailyTotals$Group.1[1]
as.Date(dailyTotals$Group.1[1], format = "%Y/%m/%d")
as.Date(dailyTotals$Group.1[1], format = "%Y/%mm/%dd")
as.Date(dailyTotals$Group.1[1], format = "%Y/%m/%dd")
dailyTotals$Group.1[2]
dailyTotals$Group.1[]
dailyTotals$Group.1
as.POSIXct("2013-06-01 08:07:00", format="%Y-%m-%d %H:%M:%S")
as.POSIXct(dailyTotals$Group.1[1], format = "%Y-%m-d")
as.Date(dailyTotals$Group.1[1], format = "%Y-%m-d")
as.POSIXct(dailyTotals$Group.1, format = "%Y-%m-d")
as.Date(dailyTotals$Group.1[1], format = "%Y-%m-%d")
as.Date(dailyTotals$Group.1, format = "%Y-%m-%d")
hist(as.Date(dailyTotals$Group.1, format = "%Y-%m-%d"))
hist(as.Date(dailyTotals$Group.1, format = "%Y-%m-%d"), breaks="days")
hist(as.Date(dailyTotals$Group.1, format = "%Y-%m-%d"), "days")
barplot(as.Date(dailyTotals$Group.1, format = "%Y-%m-%d"), "days")
barplot(dailyTotals)
barplot(dailyTotals$x, names.arg=as.Date(dailyTotals$Group.1, format = "%Y-%m-%d"))
dailyTotals$Group.1 = as.Date(dailyTotals$Group.1, format = "%Y-%m-%d")
hist(dailyTotals)
hist(dailyTotals$x)
hist(dailyTotals$Group.1)
hist(dailyTotals$Group.1, "days")
hist(dailyTotals$x, "days")
hist(dailyTotals$x)
hist(islands)
qqplot((dailyTotals$x)
)
qqplot(dailyTotals$Group.1, dailyTotals$x)
qqplot(dailyTotals$Group.1, dailyTotals$x) + geom_histogram()
library(ggplot2)
qqplot(dailyTotals$Group.1, dailyTotals$x) + geom_histogram()
ggplot(dailyTotals$Group.1, dailyTotals$x) + geom_histogram()
ggplot(dailyTotals$Group.1, data=dailyTotals, geom="histogram"
)
ggplot(dailyTotals, aes(x=dailyTotals$Group.1), geom="histogram")
ggplot(dailyTotals$x, aes(x=dailyTotals$Group.1), geom="histogram")
qplot(dailyTotals)
qplot(dailyTotals$x, data=dailyTotals)
qplot(dailyTotals$Group.1, data=dailyTotals)
qplot(dailyTotals$x, data=dailyTotals)
qplot(dailyTotals$x, data=dailyTotals, weight=dailyTotals$Group.1)
qplot(dailyTotals$Group.1, data=dailyTotals, weight=dailyTotals$x)
barplot(dailyTotals$x, names.arg=dailyTotals$Group.1)
qplot(dailyTotals$Group.1, data=dailyTotals, weight=dailyTotals$x)
barplot(dailyTotals$x, names.arg=dailyTotals$Group.1)
qplot(dailyTotals$Group.1, data=dailyTotals, weight=dailyTotals$x)
qplot(dailyTotals$Group.1, data=dailyTotals, weight=dailyTotals$x, geom="histogram")
qplot(dailyTotals$Group.1, data=dailyTotals, weight=dailyTotals$x, geom="histogram", binwidth=dailyTotals$Group.1)
qplot(dailyTotals$Group.1, data=dailyTotals, weight=dailyTotals$x, geom="histogram", binwidth=x)
qplot(dailyTotals$Group.1, data=dailyTotals, weight=dailyTotals$x, geom="histogram")
ggplot(dailyTotals, aes(dailyTotals$Group.1))
ggplot(dailyTotals, aes(dailyTotals$Group.1)) + geom_histogram()
ggplot(dailyTotals, aes(dailyTotals$Group.1)) + geom_histogram(binwidth=1)
ggplot(dailyTotals, aes(dailyTotals$Group.1, dailyTotals$x)) + geom_histogram(binwidth=1)
ggplot(dailyTotals, aes(x=dailyTotals$Group.1)) + geom_histogram()
dailyTotals
ggplot(dailyTotals, aes(x=dailyTotals$x)) + geom_histogram()
ggplot(dailyTotals, aes(x=dailyTotals$x)) + geom_histogram(binwidth=1)
ggplot(dailyTotals, aes(x=dailyTotals$x)) + geom_histogram(binwidth=100)
ggplot(dailyTotals, aes(x=dailyTotals$x)) + geom_histogram(binwidth=1000)
ggplot(dailyTotals, aes(x=dailyTotals$x)) + geom_histogram(binwidth=30)
ggplot(dailyTotals, aes(x=dailyTotals$x)) + geom_histogram(binwidth=1000)
ggplot(dailyTotals, aes(x=dailyTotals$x)) + geom_histogram(binwidth=10000)
ggplot(dailyTotals, aes(x=dailyTotals$x)) + geom_histogram(binwidth=1000)
ggplot(dailyTotals, aes(x=dailyTotals$x)) + geom_histogram(binwidth=500)
ggplot(dailyTotals, aes(x=dailyTotals$x)) + geom_histogram(binwidth=200)
ggplot(dailyTotals, aes(x=dailyTotals$x)) + geom_histogram()
ggplot(dailyTotals, aes(x=dailyTotals$x)) + geom_histogram(binwidth=200)
ggplot(dailyTotals, aes(x=dailyTotals$x)) + geom_histogram(binwidth=500)
ggplot(dailyTotals, aes(x=dailyTotals$x)) + geom_histogram(binwidth=1000)
mean(dailyTotals$x)
median(dailyTotals$x)
str(data)
aggregate(data$steps, list(data$interval), mean)
aggregate(dfNoNA$steps, list(dfNoNA$interval), mean)
intervalAvgs = aggregate(dfNoNA$steps, list(dfNoNA$interval), mean)
plot(intervalAvgs)
plot(intervalAvgs, type="l")
max(intervalAvgs)
max(intervalAvgs$x)
intervalAvgs[intervalAvgs$x = max(intervalAvgs$x)]
intervalAvgs[intervalAvgs$x == max(intervalAvgs$x)]
intervalAvgs[intervalAvgs$x == max(intervalAvgs$x),]
intervalAvgs[intervalAvgs$x == max(intervalAvgs$x),1]
head(data)
data[data$steps == NA,]
head(data[data$steps == NA,])
head(data[data$steps == 'NA',])
head(data[is.na(data$steps),])
data[is.na(data$steps),]
str(data)
str(data[is.na(data$steps),])
str(data[is.na(data$date),])
str(data[is.na(data$interval),])
str(data[is.na(data$steps),])
nrow(data[is.na(data$steps),1])
nrow(data[is.na(data$steps),])
data[is.na(data$steps),]
head(data[is.na(data$steps),])
data[is.na(data$steps),1]
data[[is.na(data$steps),1]]
data[[is.na(data$steps)],1]
data[[is.na(data$steps),1]1]
data[is.na(data$steps),]
head(data[is.na(data$steps),])
data$steps[is.na(data$steps),]
test <- data
test$steps[is.na(test$steps),1]
test$steps[is.na(test$steps),]
test[is.na(test$steps),1]
test[is.na(test$steps),]
head(test[is.na(test$steps),1])
head(test[is.na(test$steps),])
test[is.na(test$steps)1,]
test[[is.na(test$steps),]]
test[1[is.na(test$steps),]]
test[1,[is.na(test$steps),]]
test[is.na(test$steps),]
head(test[is.na(test$steps),], 1)
class(head(test[is.na(test$steps),], 1))
head(test[is.na(test$steps),], 1)
test[[is.na(test$steps),],]
test[,[is.na(test$steps),]]
test[is.na(test$steps[1]),]
head(test[is.na(test$steps[1]),])
test$steps[1]
head(test[is.na(test$steps[1,]),])
test$steps[1,]
test[1,]
head(test[is.na(test$steps),])
test[1,[is.na(test$steps),]]
test[1,is.na(test$steps),]]
test[1,]$steps
test[1,][is.na(test$steps)]
test[1,][is.na(test$steps),]
head(test[1,][is.na(test$steps),])
head(test[is.na(test$steps),])
head(dailyTotals)
dailyTotals[dailyTotals$Group.1 == test[1,2],2]
test[1,2]
dailyTotals[dailyTotals$Group.1 == test[1,2],]
head(test)
test$date = as.Date(test$date, format = "%Y-%m-%d")
dailyTotals[dailyTotals$Group.1 == test[1,2],]
head(dailyTotals)
test[1,2]
str(test[1,2])
str(intervalAvgs)
test[1,3]
test[2,3]
intervalAvgs[intervalAvgs$Group.1==test[1,3]]
test[2,3]
test[1,3]
intervalAvgs[intervalAvgs$Group.1==0
]
intervalAvgs[intervalAvgs$Group.1==5]
head(intervalAvgs[intervalAvgs$Group.1==5,])
head(intervalAvgs[intervalAvgs$Group.1==0,])
intervalAvgs[intervalAvgs$Group.1==0,]
intervalAvgs[intervalAvgs$Group.1==0,2]
intervalAvgs[intervalAvgs$Group.1==test[1,3],2]
intervalAvgs[intervalAvgs$Group.1==test[1,4],2]
intervalAvgs[intervalAvgs$Group.1==test[2,3],2]
head(test[is.na(test$steps),])
head(test[is.na(test$steps),1])
head(test[is.na(test$steps),])
head(test[is.na(test$steps),]$steps)
apply(test, 1, mean)
apply(test, 3, mean)
str(test)
apply(test, 1, mean)
apply(test, 1, function(x) is.na(x))
apply(test$steps, 1, function(x) is.na(x))
apply(test$steps, 2, function(x) is.na(x))
head(test$steps)
head(test[is.na(test$steps),])
intervalAvgs[intervalAvgs$Group.1==test[2,3],2]
getIntervalMean <- function(x) {
intervalAvgs[intervalAvgs$Group.1==test[x,3],2]
}
getIntervalMean(0)
intervalAvgs[intervalAvgs$Group.1==test[2,3],2]
intervalAvgs[intervalAvgs$Group.1==test[1,3],2]
intervalAvgs[intervalAvgs$Group.1==test[0,3],2]
intervalAvgs[intervalAvgs$Group.1==0,2]
intervalAvgs[intervalAvgs$Group.1==5,2]
getIntervalMean <- function(x) {
intervalAvgs[intervalAvgs$Group.1==x,2]
}
getIntervalMean(0)
getIntervalMean(5)
head(test[is.na(test$steps),])
head(test[is.na(test$steps),],1)
head(test[is.na(test)])
str(test[is.na(test)])
str(test[is.na(test),])
head(test[is.na(test),])
head(test[is.na(test),]$steps[1])
test[is.na(test),]$steps[1]
test[is.na(test),]$interval[1]
test[is.na(test),]$interval[2]
test[is.na(test),]$interval[3]
getIntervalMean(test[is.na(test),]$interval[3])
getIntervalMean(test[is.na(test),]$interval[1])
getIntervalMean(test[is.na(test),]$interval[2])
head(data[is.na(data),])
seq_along(data[is.na(data),])
count(data[is.na(data),])
length(data[is.na(data),])
data[is.na(data),]
str(data[is.na(data),])
nrows(data[is.na(data),])
nrow(data[is.na(data),])
seq_along(nrow(data[is.na(data),]))
1:nrow(data[is.na(data),])
getIntervalMean(test[is.na(test),]$interval[2])
data$steps[1]
data[is.na(data),]$steps[1]
str(data[is.na(data),]$steps)
tail(data[is.na(data),]$steps)
getIntervalMean(data[is.na(data),]$interval[2])
getIntervalMean(data[is.na(data),]$interval[1])
getIntervalMean(data[is.na(data),]$interval[0])
getIntervalMean(data[is.na(data),]$interval[2])
getIntervalMean(data[is.na(data),]$interval[3])
for(i in 1:nrow(data[is.na(data),]) {
data[is.na(data),]$steps[i] <- getIntervalMean(data[is.na(data),]$interval[i])
}
count <- nrow(data[is.na(data),]
)
for(i in 1:nrow(data[is.na(data),])) {
data[is.na(data),]$steps[i] <- getIntervalMean(data[is.na(data),]$interval[i])
}
data[is.na(data),]
str(data[is.na(data),])
data <- read.csv("activity\\activity.csv")
data[is.na(data),]$steps[1]
data[is.na(data),]$steps[1]
naIndex <-data[is.na(data),]
str(naIndex)
data[1]
data[1,1]
data[1,]
data[data==naIndex[1,]]
str(data)
tail(naIndex)
data[data$date==naIndex$date[1] && data$interval==naIndex$interval[1]]
naIndex$interval[1]
naIndex$date[1]
data[data$date==naIndex$date[1]
]
data[data$date==naIndex$date[1],]
data[(data$date==naIndex$date[1] && data$interval==naIndex$interval[1])]
data[(data$date==naIndex$date[1] && data$interval==naIndex$interval[1]),]
data[data$interval==naIndex$interval[1],]
data[(data$date==naIndex$date[1] & data$interval==naIndex$interval[1]),]
data[(data$date==naIndex$date[2] & data$interval==naIndex$interval[2]),]
data[(data$date==naIndex$date[2] & data$interval==naIndex$interval[2]),]$steps
getIntervalMean(naIndex$interval[1])
naIndex$interval[1]
naIndex$interval[2]
naIndex <-data[is.na(data),]
for(i in 1:nrow(naIndex) {
data[is.na(data),]$steps <- getIntervalMean(data[is.na(data),]$interval[i])
data[(data$date==naIndex$date[i] & data$interval==naIndex$interval[i]),]$steps <- getIntervalMean(naIndex$interval[i])
}
for(i in 1:nrow(naIndex)) {
data[is.na(data),]$steps <- getIntervalMean(data[is.na(data),]$interval[i])
data[(data$date==naIndex$date[i] & data$interval==naIndex$interval[i]),]$steps <- getIntervalMean(naIndex$interval[i])
}
str(data[is.na(data),])
head(data)
data <- read.csv("activity\\activity.csv")
naIndex <-data[is.na(data),]
for(i in 1:nrow(naIndex)) {
data[(data$date==naIndex$date[i] & data$interval==naIndex$interval[i]),]$steps <- getIntervalMean(naIndex$interval[i])
}
head(data)
dailyTotalsImputed = aggregate(data$steps, list(data$date), sum)
str(dailyTotalsImputed)
dailyTotalsImputed$Group.1 = as.Date(dailyTotalsImputed$Group.1, format = "%Y-%m-%d")
ggplot(dailyTotalsImputed, aes(x=dailyTotalsImputed$x)) + geom_histogram()
ggplot(dailyTotals, aes(x=dailyTotals$x)) + geom_histogram()
dailyTotalsImputed$Group.1 = as.Date(dailyTotalsImputed$Group.1, format = "%Y-%m-%d")
ggplot(dailyTotalsImputed, aes(x=dailyTotalsImputed$x)) + geom_histogram()
ggplot(dailyTotals, aes(x=dailyTotals$x)) + geom_histogram()
dailyTotalsImputed$Group.1 = as.Date(dailyTotalsImputed$Group.1, format = "%Y-%m-%d")
ggplot(dailyTotalsImputed, aes(x=dailyTotalsImputed$x)) + geom_histogram()
mean(dailyTotalsImputed$x)
median(dailyTotalsImputed$x)
